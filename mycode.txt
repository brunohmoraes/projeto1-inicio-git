git status - verificar como estão todos
git add "nome do arquivo" - adiciona o arquivo separado
git add . - adiciona todos arquivos
git config --global user.email "email@email.com" - para add o email
git config - global user.name "nome" - para add o nome do cidadão
git commit -m "commit inicial" - para inicar o processo de versão
git remote add origin "link" - para onde o código vai ser enviado, não precisa das aspas
git push --set-upstream origin master - manda tudo pro github
git commit -m "o que foi adicionado na nova versão" - versionamento
git reflog - Vai exibir a última versão e o que foi feito e a versão antes dela
git reset --hard "e o ID" - Vai voltar pra versão que você selecionou do ID sem aspas - tbm serve pra voltar pra versão do "futuro"
git branch - Exibe as branch 
git branch "nome" - Add uma nova branch, não tem aspas
git checkout "nome da branch" - Altera pra outra branch
git checkout master, git branch, git merge staging, git push - Irá mesclar os arquivos das duas branchs
git pull, git merge staging - Para garantir que está trabalhando com o arquivo atualizado daquela branch
	1. git pull da branch principal
	2. Gerar uma nova branch a partir da branch principal
	3. Trabalhar e adicionar novas funcionalidades na nova branch que criou
	4. Finalizar o trabalho na branch temporária
	5. Git checkout na branch principal
	6. git pull
	7. Mergiar(unir) o código da branch temporária com a branch princial (depois de testar)
	8. git push da branch principal
git checkout -b "nome da branch" master - cria a nova branch e já muda para ela
	git branch
	git add .
	git status
	git commit -m "O que foi alterado"
	git checkout master
	git pull
	git merge branch
	git push

	